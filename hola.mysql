-- Eliminar y crear base de datos
DROP DATABASE IF EXISTS Proyecto;
CREATE DATABASE Proyecto;
USE Proyecto;

-- Tabla de Usuarios
CREATE TABLE Usuarios (
    id_usuario INT AUTO_INCREMENT PRIMARY KEY,
    tipo_usuario ENUM('ayuntamiento', 'perito', 'aseguradora') NOT NULL,
    nombre VARCHAR(100) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    contraseña VARCHAR(255) NOT NULL,
    fecha_registro DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Ayuntamientos
CREATE TABLE Ayuntamientos (
    id_ayuntamiento INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT,
    codigo_municipal VARCHAR(50) UNIQUE,
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id_usuario)
);

-- Peritos
CREATE TABLE Peritos (
    id_perito INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT,
    numero_colegiado VARCHAR(50) UNIQUE,
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id_usuario)
);

-- Aseguradoras
CREATE TABLE Aseguradoras (
    id_aseguradora INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT,
    nif VARCHAR(50) UNIQUE NOT NULL,
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id_usuario)
);

-- Expedientes
CREATE TABLE Expedientes (
    id_expediente INT AUTO_INCREMENT PRIMARY KEY,
    descripcion TEXT,
    matricula VARCHAR(15),
    dni_cliente VARCHAR(15),
    fecha_creacion DATETIME DEFAULT CURRENT_TIMESTAMP,
    fecha_actualizacion DATETIME ON UPDATE CURRENT_TIMESTAMP
);

-- Estados
CREATE TABLE Estados (
    id_estado INT AUTO_INCREMENT PRIMARY KEY,
    nombre_estado VARCHAR(50) NOT NULL
);

-- Estados de los expedientes
CREATE TABLE Expediente_Estados (
    id_expediente_estado INT AUTO_INCREMENT PRIMARY KEY,
    id_expediente INT,
    id_estado INT,
    fecha_cambio DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_expediente) REFERENCES Expedientes(id_expediente),
    FOREIGN KEY (id_estado) REFERENCES Estados(id_estado)
);

-- Relación muchos a muchos
CREATE TABLE Usuarios_Expedientes (
    id_usuario_expediente INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT,
    id_expediente INT,
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id_usuario),
    FOREIGN KEY (id_expediente) REFERENCES Expedientes(id_expediente)
);

-- ========================
-- DATOS DE PRUEBA
-- ========================

-- Usuarios
INSERT INTO Usuarios (tipo_usuario, nombre, email, contraseña) VALUES
('aseguradora', 'Aseguradora Alfa', 'alfa@correo.com', '1234'),
('aseguradora', 'Aseguradora Beta', 'beta@correo.com', '1234'),
('ayuntamiento', 'Ayuntamiento Madrid', 'madrid@ayto.es', '1234'),
('ayuntamiento', 'Ayuntamiento Barcelona', 'barcelona@ayto.es', '1234'),
('perito', 'Perito Juan', 'juan@perito.com', '1234'),
('perito', 'Perito Ana', 'ana@perito.com', '1234');

-- Aseguradoras
INSERT INTO Aseguradoras (id_usuario, nif) VALUES
(1, 'A12345678'),
(2, 'B87654321');

-- Ayuntamientos
INSERT INTO Ayuntamientos (id_usuario, codigo_municipal) VALUES
(3, 'M-001'),
(4, 'B-002');

-- Peritos
INSERT INTO Peritos (id_usuario, numero_colegiado) VALUES
(5, 'PER123'),
(6, 'PER456');

-- Estados
INSERT INTO Estados (nombre_estado) VALUES
('Recepción de la declaración'),
('Aclaración de sucesos'),
('Valoración'),
('Comprovación siniestro'),
('Peritaje'),
('Resoucion de la tramitacion');

-- Expedientes
INSERT INTO Expedientes ( descripcion, matricula, dni_cliente) VALUES
('Accidente leve en zona urbana', '1234ABC', '11111111A'),
('Colisión en carretera secundaria', '5678XYZ', '22222222B');

-- Relación con usuarios
INSERT INTO Usuarios_Expedientes (id_usuario, id_expediente) VALUES
(5, 1),
(6, 2),
(3, 1),
(4, 2);

-- Estados de expedientes
INSERT INTO Expediente_Estados (id_expediente, id_estado) VALUES
(1, 1),
(2, 2);
